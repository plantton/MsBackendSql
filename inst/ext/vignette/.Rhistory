library(MsBackendSql)
library(devtools)
install_github("rformassspectrometry/MsBackendSql")
library(MsBackendSql)
library(MsBackendSql)
library(Spectra)
library(mzR)
library(RSQLite)
library(msdata)
library(peakRAM)
library(tidyverse)
library(pryr)
f <- msdata::proteomics(full.names = TRUE)[4]
dbname <- create_metadata_db(f)
f
fls <- dir(system.file("sciex", package = "msdata"), full.names = TRUE)
fls
sps_sciex <- Spectra(f, backend = MsBackendMzR())
test1 <- Spectra::backendInitialize(MsBackendMzR(), files = f)
class(test1)
class(sps_sciex)
test3 <- MsBackendSqlDb::backendInitialize(MsBackendSqlDb(), files = f)
test3 <- MsBackendSql::backendInitialize(MsBackendSqlDb(), files = f)
##
conn1 <- dbConnect(RSQLite::SQLite(), "bench1.db)
test3 <- MsBackendSql::backendInitialize(MsBackendSqlDb(), files = f)
)
)
""
)
""
conn1 <- dbConnect(RSQLite::SQLite(), "bench1.db")
test3 <- MsBackendSql::backendInitialize(MsBackendSqlDb(), conn1,files = f)
q()
library(MsBackendSql)
library(Spectra)
library(mzR)
library(RSQLite)
library(msdata)
library(peakRAM)
library(tidyverse)
library(pryr)
conn1 <- dbConnect(RSQLite::SQLite(), "bench1.db")
test3 <- MsBackendSql::backendInitialize(MsBackendSqlDb(), conn1,files = f)
f <- msdata::proteomics(full.names = TRUE)[4]
test3 <- MsBackendSql::backendInitialize(MsBackendSqlDb(), conn1,files = f)
create_metadata_db <- function(filenames, dbname) {
if (missing(dbname))
dbname <- tempfile(fileext = ".db")
if (file.exists(dbname))
stop("dbname file already exists.")
conn0 <- dbConnect(RSQLite::SQLite(), dbname)
for (i in 1:length(filenames)) {
msd <- mzR::openMSfile(filenames[i])
hdr <- mzR::header(msd)
hdr$pkey <- paste0(basename(filenames[i]), "_", i, "_", seq(nrow(hdr)))
dbWriteTable(conn0,
"meta_combined",
hdr,
append = TRUE,
row.names = FALSE,
overwrite = FALSE)
mzR::close(msd)
}
dbDisconnect(conn0)
dbname
}
testname <- create_metadata_db(f, "test.db")
library(msdata)
library(RSQLite)
con <- dbConnect(SQLite(), tempfile())
getwd()
fls <- dir(system.file("sciex", package = "msdata"), full.names = TRUE, pattern = "mzML$")
fls
msb <- backendInitialize(MsBackendSqlDb(), dbcon = con, files = fls)
f <- msdata::proteomics(full.names = TRUE)[4]
f
b1 <- Spectra::backendInitialize(MsBackendMzR(), files = fls)
b1 <- Spectra::backendInitialize(MsBackendMzR(), files = f)
b2 <- Spectra::backendInitialize(MsBackendDataFrame(), files = f)
b2
b2 <- setBackend(b1, MsBackendDataFrame())
f <- msdata::proteomics(full.names = TRUE)[4]
sps_tmt <-  Spectra(f, backend = MsBackendMzR())
sps_tmt
b2 <- Spectra::backendInitialize(MsBackendMzR(), files = f)
b2
dim(b2)
object_size(b2)
object_size(sps_tmt)
b3 <- setBackend(sps_tmt, MsBackendDataFrame())
b3
object_size(b3)
b2 <- Spectra::backendInitialize(MsBackendMzR(), files = f)
b3 <- setBackend(sps_tmt, MsBackendDataFrame())
object_size(b2)
object_size(b3)
conn1 <- dbConnect(SQLite(), "b1.db")
b1 <- backendInitialize(MsBackendSqlDb(), dbcon = conn1, files = f)
conn1 <- dbConnect(SQLite(), "b1.db")
b1 <- backendInitialize(MsBackendSqlDb(), dbcon = conn1, files = f)
fls  <-  rep(f, 10)
test <- Spectra::backendInitialize(MsBackendMzR(), files = fls)
object_size(test)
rm(test)
fls
test1 <- backendInitialize(MsBackendSqlDb(), dbcon = conn1, files = fls)
conn1 <- dbConnect(SQLite(), "b1.db")
test1 <- backendInitialize(MsBackendSqlDb(), dbcon = conn1, files = fls)
fls
rep(f,10)
conn1 <- dbConnect(SQLite(), "bench1.db")
sqlb1 <- backendInitialize(MsBackendSqlDb(), dbcon = conn1, files = f)
object_size(sqlb1)
conn10 <- dbConnect(SQLite(), "bench10.db")
sqlb10 <- backendInitialize(MsBackendSqlDb(), dbcon = conn10, rep(f, 10))
q()
