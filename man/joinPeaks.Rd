% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/peaks-functions.R
\name{joinPeaks}
\alias{joinPeaks}
\title{Join (map) peaks of two spectra}
\usage{
joinPeaks(x, y, type = "outer", tolerance = 0, ppm = 10, ...)
}
\arguments{
\item{x}{\code{matrix} with two columns \code{"mz"} and \code{"intensity"} containing the
m/z and intensity values of the mass peaks of a spectrum.}

\item{y}{\code{matrix} with two columns \code{"mz"} and \code{"intensity"} containing the
m/z and intensity values of the mass peaks of a spectrum.}

\item{type}{For \code{joinPeaks}: \code{character(1)} specifying the type of join that
should be performed. See function description for details.}

\item{tolerance}{\code{numeric(1)} defining a constant maximal accepted difference
between m/z values of peaks from the two spectra to be matched/mapped.}

\item{ppm}{\code{numeric(1)} defining a relative, m/z-dependent, maximal accepted
difference between m/z values of peaks from the two spectra to be
matched/mapped.}

\item{...}{option parameters.}
}
\value{
All functions return a \code{list} of elements \code{"x"} and \code{"y"} each being a two
column matrix with m/z (first column) and intensity values (second column).
The two matrices contain the matched peaks between input matrices \code{x} and \code{y}
and hence have the same number of rows. Peaks present in \code{x} but not in the
\code{y} input matrix have m/z and intensity values of \code{NA} in the result matrix
for \code{y} (and \emph{vice versa}).
}
\description{
These functions map peaks from two spectra with each other if the difference
between their m/z values is smaller than defined with parameters \code{tolerance}
and \code{ppm}. All functions take two matrices
\itemize{
\item \code{joinPeaks}: maps peaks from two spectra allowing to specify the type of
\emph{join} that should be performed: \code{type = "outer"} each peak in \code{x} will be
matched with each peak in \code{y}, for peaks that do not match any peak in the
other spectra an \code{NA} intensity is returned. With \code{type = "left"} all peaks
from the left spectrum (\code{x}) will be matched with peaks in \code{y}. Peaks in
\code{y} that do not match any peak in \code{x} are omitted. \code{type = "right"} is the
same as \code{type = "left"} only for \code{y}. Only peaks that can be matched
between \code{x} and \code{y} are returned by \code{type = "inner"}, i.e. only
peaks present in both spectra are reported.
}
}
\section{Implementation notes}{


A mapping function must take two numeric matrices \code{x} and \code{y} as input and
must return \code{list} with two elements named \code{"x"} and \code{"y"} that represent
the aligned input matrices. The function should also have \code{...} in its
definition. Parameters \code{ppm} and \code{tolerance} are suggested but not required.
}

\examples{

x <- cbind(c(31.34, 50.14, 60.3, 120.9, 230, 514.13, 874.1),
    1:7)
y <- cbind(c(12, 31.35, 70.3, 120.9 + ppm(120.9, 5),
    230 + ppm(230, 10), 315, 514.14, 901, 1202),
    1:9)

## No peaks with identical m/z
joinPeaks(x, y, ppm = 0, type = "inner")

## With ppm 10 two peaks are overlapping
joinPeaks(x, y, ppm = 10, type = "inner")

## Outer join: contain all peaks from x and y
joinPeaks(x, y, ppm = 10, type = "outer")

## Left join: keep all peaks from x and those from y that match
joinPeaks(x, y, ppm = 10, type = "left")

## Right join: keep all peaks from y and those from x that match. Using
## a constant tolerance of 0.01
joinPeaks(x, y, tolerance = 0.01, type = "right")
}
\author{
Johannes Rainer
}
